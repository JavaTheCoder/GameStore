@using GameStoreData.Identity.Data;
@using Microsoft.AspNetCore.Identity;

@model IEnumerable<GameStoreData.Models.Game>

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager

@{
    bool hide = true;
    ViewData["Title"] = "ListGames";
}

<div style="text-align: center; margin-bottom: 20px;">
    @*TODO: MAKE THIS A DROPDOWN <a class="newgame" asp-action="Filter">Filter</a>*@
    @if (SignInManager.IsSignedIn(User) && 
        !UserManager.GetRolesAsync(UserManager
        .GetUserAsync(User).Result).Result.Contains("User"))
    {
        hide = false;
        <a class="newgame" asp-action="Create">New Game</a>
    }
</div>

<div>
    @foreach (var item in Model)
    {
    <div class="games-list">
        <img src="@item.Image" alt="image" onclick="imgClick(@item.Id)">
        <p class="details">
            @{ string s = String.Join("/", item.Genres.Select(g => g.Name)); }
            @(string.IsNullOrEmpty(s) ? "No Genre" : s)
            <br>@(item.Name)
        </p>
        <p class="details" style="font-weight:bold">$@(item.Price)</p>
        @if (!hide) {
            <div style="margin-top:15px; text-align:center;">
                <a class="newgame" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                <a class="newgame" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </div>
        }
    </div>
    }
</div>

<div class="row" style="clear: both"></div>
