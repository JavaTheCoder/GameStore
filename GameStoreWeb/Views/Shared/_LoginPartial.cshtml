@using GameStoreData.Identity.Data;
@using GameStoreData.Service;
@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject GameService GameService

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User)) 
{ // TODO: ADD PAGE FOR ADMIN TO GRANT ELEVATED PERMISSIONS TO USERS
    <li class="nav-item" style="margin-right: 15px; margin-top: 8px;">
        <a asp-controller="Game" asp-action="GetAllCartItems" style="text-decoration:none">🛒</a> @(GameService
        .GetAllCartItemsByUsername(UserManager.GetUserAsync(User).Result.UserName).Count())
    </li>
    <li class="nav-item">
            <img src="@UserManager.GetUserAsync(User).Result.ImageURL" class="avatar"
            onerror="this.src='https://w0.peakpx.com/wallpaper/709/216/HD-wallpaper-pitch-black-dark.jpg'">
    </li>
    <li class="nav-item">
            <a id="manage" class="nav-link text-dark" asp-area="Identity" 
            asp-page="/Account/Manage/Index" title="Manage">
            @UserManager.GetUserAsync(User).Result.FirstName @UserManager.GetUserAsync(User).Result.LastName
            </a>
    </li>
    <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Game", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
   @* <li class="nav-item"> 
        <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>*@
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Sign In</a>
    </li>
}
</ul>
